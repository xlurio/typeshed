from _typeshed import Incomplete
from typing import Dict

from scrapy.http import Request as Request
from scrapy.utils.python import get_spec as get_spec
from scrapy.utils.spider import iterate_spider_output as iterate_spider_output

class Contract:
    request_cls: Incomplete
    testcase_pre: Incomplete
    testcase_post: Incomplete
    args: Incomplete
    def __init__(self, method, *args) -> None: ...
    def add_pre_hook(self, request, results): ...
    def add_post_hook(self, request, results): ...
    def adjust_request_args(self, args): ...

class ContractsManager:
    contracts: Dict[str, Contract]
    def __init__(self, contracts) -> None: ...
    def tested_methods_from_spidercls(self, spidercls): ...
    def extract_contracts(self, method): ...
    def from_spider(self, spider, results): ...
    def from_method(self, method, results): ...
