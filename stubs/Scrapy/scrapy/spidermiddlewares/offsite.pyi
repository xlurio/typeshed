from _typeshed import Incomplete
from collections.abc import Generator

from scrapy import signals as signals
from scrapy.http import Request as Request
from scrapy.utils.httpobj import urlparse_cached as urlparse_cached

logger: Incomplete

class OffsiteMiddleware:
    stats: Incomplete
    def __init__(self, stats) -> None: ...
    @classmethod
    def from_crawler(cls, crawler): ...
    def process_spider_output(self, response, result, spider) -> Generator[Incomplete, None, None]: ...
    def should_follow(self, request, spider): ...
    def get_host_regex(self, spider): ...
    host_regex: Incomplete
    domains_seen: Incomplete
    def spider_opened(self, spider) -> None: ...

class URLWarning(Warning): ...
class PortWarning(Warning): ...
