import logging
from _typeshed import Incomplete

from scrapy.exceptions import ScrapyDeprecationWarning as ScrapyDeprecationWarning
from scrapy.settings import Settings as Settings
from scrapy.utils.versions import scrapy_components_versions as scrapy_components_versions

logger: Incomplete

def failure_to_exc_info(failure): ...

class TopLevelFormatter(logging.Filter):
    loggers: Incomplete
    def __init__(self, loggers: Incomplete | None = ...) -> None: ...
    def filter(self, record): ...

DEFAULT_LOGGING: Incomplete

def configure_logging(settings: Incomplete | None = ..., install_root_handler: bool = ...) -> None: ...
def install_scrapy_root_handler(settings) -> None: ...
def get_scrapy_root_handler(): ...
def log_scrapy_info(settings: Settings) -> None: ...
def log_reactor_info() -> None: ...

class StreamLogger:
    logger: Incomplete
    log_level: Incomplete
    linebuf: str
    def __init__(self, logger, log_level=...) -> None: ...
    def write(self, buf) -> None: ...
    def flush(self) -> None: ...

class LogCounterHandler(logging.Handler):
    crawler: Incomplete
    def __init__(self, crawler, *args, **kwargs) -> None: ...
    def emit(self, record) -> None: ...

def logformatter_adapter(logkws): ...
