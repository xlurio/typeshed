from _typeshed import Incomplete
from collections.abc import Generator, Iterable

from scrapy.exceptions import ScrapyDeprecationWarning as ScrapyDeprecationWarning
from scrapy.utils.decorators import deprecated as deprecated

def flatten(x): ...
def iflatten(x) -> Generator[Incomplete, None, None]: ...
def is_listlike(x): ...
def unique(list_, key=...): ...
def to_unicode(text, encoding: Incomplete | None = ..., errors: str = ...): ...
def to_bytes(text, encoding: Incomplete | None = ..., errors: str = ...): ...
def to_native_str(text, encoding: Incomplete | None = ..., errors: str = ...): ...
def re_rsearch(pattern, text, chunk_size: int = ...): ...
def memoizemethod_noargs(method): ...
def binary_is_text(data): ...
def get_func_args(func, stripself: bool = ...): ...
def get_spec(func): ...
def equal_attributes(obj1, obj2, attributes): ...

class WeakKeyCache:
    default_factory: Incomplete
    def __init__(self, default_factory) -> None: ...
    def __getitem__(self, key): ...

def retry_on_eintr(function, *args, **kw): ...
def without_none_values(iterable): ...
def global_object_name(obj): ...
def garbage_collect() -> None: ...

class MutableChain(Iterable):
    data: Incomplete
    def __init__(self, *args: Iterable) -> None: ...
    def extend(self, *iterables: Iterable): ...
    def __iter__(self): ...
    def __next__(self): ...
    def next(self): ...
